{"version":3,"file":"static/js/199.b93f83f4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ValidationPopup/ValidationPopup.module.css?7cae","components/ValidationPopup/ValidationPopup.jsx","webpack://react-homework-template/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"validationPopup\":\"ValidationPopup_validationPopup__-i5Rs\",\"validationPopupItem\":\"ValidationPopup_validationPopupItem__H+yOa\",\"validationPopupIcon\":\"ValidationPopup_validationPopupIcon__THSxl\"};","import css from './ValidationPopup.module.css';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport { Paper } from '@mui/material';\n\nconst ValidationPopup = ({ validationData }) => {\n\n  return (\n    <Paper elevation={8} className={css.validationPopup}>\n      <List\n        className={css.validationPopupList}\n        sx={{ width: '100%', maxWidth: 360 }}\n      >\n        {validationData.map((item, index) => {\n          const reqKey = Object.keys(item)[0];\n          const { id, message, met } = item[reqKey];\n          const IconComponent = met ? CheckCircleOutlineIcon : ErrorOutlineIcon;\n          const iconColor = met ? 'green' : 'red';\n\n          return (\n            <ListItem\n              className={css.validationPopupItem}\n              key={id}\n              disableGutters\n            >\n              <IconComponent\n                className={css.validationPopupIcon}\n                style={{ color: iconColor }}\n              />\n              <ListItemText\n                disableTypography\n                primary={message}\n                sx={{ fontSize: '12px' }}\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Paper>\n  );\n};\n\nexport default ValidationPopup;\n","// extracted by mini-css-extract-plugin\nexport default {\"registerForm\":\"Register_registerForm__uD5pr\",\"registerSection\":\"Register_registerSection__Pmq8N\"};","import css from './Register.module.css';\nimport { useState } from 'react';\nimport ValidationPopup from 'components/ValidationPopup/ValidationPopup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  updateValidationReqs,\n  clearValidationReqs,\n  updateFormData,\n  clearFormData,\n} from 'redux/validation/validationSlice';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport TextField from '@mui/material/TextField';\nimport { FormControl } from '@mui/material';\nimport InputLabel from '@mui/material/InputLabel';\nimport Input from '@mui/material/Input';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Button from '@mui/material/Button';\nimport LoginIcon from '@mui/icons-material/Login';\nimport { register } from 'redux/auth/authOperations';\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n  const { name, email, password, password2 } = formData;\n  const [showPassword, setShowPassword] = useState(false);\n  const [focusedField, setFocusedField] = useState('');\n  const dispatch = useDispatch();\n  const validationReqs = useSelector(state => state.validation.validationReqs);\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    e.preventDefault();\n    const targetField = e.target.id;\n    const value = e.target.value;\n    setFormData(prevState => ({ ...prevState, [targetField]: value }));\n    dispatch(updateFormData({ [targetField]: value }));\n    dispatch(updateValidationReqs({ [e.target.id]: e.target.value }));\n  };\n\n  const handleFocus = e => {\n    const targetField = e.target.id;\n    setFocusedField(targetField);\n  };\n\n  const handleBlur = () => {\n    setFocusedField('');\n  };\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = e => {\n    e.preventDefault();\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    const isValid = Object.values(validationReqs).every(fieldReqs =>\n      fieldReqs.every(req => req[Object.keys(req)[0]].met)\n    );\n\n    if (!name || !email || !password) {\n      Notify.warning('Please fill in all the fields');\n      return;\n    } else if (!isValid) {\n      Notify.warning('Please correct the fields with errors');\n      return;\n    } else {\n      Notify.success('Success! You are registered');\n      dispatch(register({ name, email, password }));\n      setFormData({\n        name: '',\n        email: '',\n        password: '',\n        password2: '',\n      });\n      dispatch(clearValidationReqs());\n      dispatch(clearFormData());\n      navigate('/login');\n    }\n  };\n\n  Notify.init({\n    position: 'center-center',\n    distance: '15px',\n    timeout: 1000,\n    showOnlyTheLastOne: true,\n    fontSize: '20px',\n  });\n\n  return (\n    <section className={css.registerSection}>\n      <form className={css.registerForm}>\n        <TextField\n          sx={{ marginTop: '20px' }}\n          id=\"name\"\n          label=\"Username\"\n          variant=\"standard\"\n          fullWidth\n          size=\"large\"\n          value={name}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n        />\n        {focusedField === 'name' && (\n          <ValidationPopup validationData={validationReqs.name} />\n        )}\n        <TextField\n          sx={{ marginTop: '20px' }}\n          id=\"email\"\n          label=\"Email\"\n          variant=\"standard\"\n          fullWidth\n          size=\"small\"\n          value={email}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n        />\n        {focusedField === 'email' && (\n          <ValidationPopup validationData={validationReqs.email} />\n        )}\n        <FormControl\n          sx={{ width: '100%', marginTop: '20px' }}\n          variant=\"standard\"\n        >\n          <InputLabel htmlFor=\"standard-adornment-password\">\n            Password\n          </InputLabel>\n          <Input\n            id=\"password\"\n            type={showPassword ? 'text' : 'password'}\n            autoComplete=\"off\"\n            value={password}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        {focusedField === 'password' && (\n          <ValidationPopup validationData={validationReqs.password} />\n        )}\n        <FormControl\n          sx={{ width: '100%', marginTop: '20px' }}\n          variant=\"standard\"\n        >\n          <InputLabel htmlFor=\"standard-adornment-password\">\n            Confirm Password\n          </InputLabel>\n          <Input\n            id=\"password2\"\n            type={showPassword ? 'text' : 'password'}\n            autoComplete=\"off\"\n            value={password2}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        {focusedField === 'password2' && (\n          <ValidationPopup validationData={validationReqs.password2} />\n        )}\n        <Button\n          sx={{ marginTop: '40px' }}\n          variant=\"contained\"\n          fullWidth\n          startIcon={<LoginIcon />}\n          onClick={handleClick}\n        >\n          REGISTER\n        </Button>\n      </form>\n    </section>\n  );\n};\n\nexport default Register;\n"],"names":["validationData","Paper","elevation","className","css","List","sx","width","maxWidth","map","item","index","Object","keys","id","message","met","IconComponent","CheckCircleOutlineIcon","ErrorOutlineIcon","iconColor","ListItem","disableGutters","style","color","ListItemText","disableTypography","primary","fontSize","useState","name","email","password","password2","formData","setFormData","showPassword","setShowPassword","focusedField","setFocusedField","dispatch","useDispatch","validationReqs","useSelector","state","validation","navigate","useNavigate","handleChange","e","preventDefault","targetField","target","value","prevState","updateFormData","updateValidationReqs","handleFocus","handleBlur","handleClickShowPassword","show","handleMouseDownPassword","Notify","position","distance","timeout","showOnlyTheLastOne","TextField","marginTop","label","variant","fullWidth","size","onChange","onFocus","onBlur","ValidationPopup","FormControl","InputLabel","htmlFor","Input","type","autoComplete","endAdornment","InputAdornment","IconButton","onClick","onMouseDown","VisibilityOff","Visibility","Button","startIcon","Login","isValid","values","every","fieldReqs","req","register","clearValidationReqs","clearFormData"],"sourceRoot":""}