{"version":3,"file":"static/js/709.0622d11e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ValidationPopup/ValidationPopup.module.css?7cae","components/ValidationPopup/ValidationPopup.jsx","redux/validation/validationSelectors.js","hooks/useValidation.jsx","webpack://react-homework-template/./src/pages/Login/Login.module.css?b420","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"validationPopup\":\"ValidationPopup_validationPopup__-i5Rs\",\"validationPopupItem\":\"ValidationPopup_validationPopupItem__H+yOa\",\"validationPopupIcon\":\"ValidationPopup_validationPopupIcon__THSxl\"};","import css from './ValidationPopup.module.css';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport { Paper } from '@mui/material';\n\nconst ValidationPopup = ({ validationData }) => {\n\n  return (\n    <Paper elevation={8} className={css.validationPopup}>\n      <List\n        className={css.validationPopupList}\n        sx={{ width: '100%', maxWidth: 360 }}\n      >\n        {validationData.map((item, index) => {\n          const reqKey = Object.keys(item)[0];\n          const { id, message, met } = item[reqKey];\n          const IconComponent = met ? CheckCircleOutlineIcon : ErrorOutlineIcon;\n          const iconColor = met ? 'green' : 'red';\n\n          return (\n            <ListItem\n              className={css.validationPopupItem}\n              key={id}\n              disableGutters\n            >\n              <IconComponent\n                className={css.validationPopupIcon}\n                style={{ color: iconColor }}\n              />\n              <ListItemText\n                disableTypography\n                primary={message}\n                sx={{ fontSize: '12px' }}\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Paper>\n  );\n};\n\nexport default ValidationPopup;\n","export const getValidationReqs = state => state.validation.validationReqs;\nexport const getFormData = state => state.validation.formData;\nexport const getFormDataName = state => state.validation.formData.name;\nexport const getFormDataPassword = state => state.validation.formData.password;\nexport const getFormDataPassword2 = state => state.validation.formData.password2;\nexport const getFormDataEmail = state => state.validation.formData.email;","import { useSelector } from 'react-redux';\nimport {\n  getValidationReqs,\n  getFormData,\n  getFormDataEmail,\n  getFormDataName,\n  getFormDataPassword,\n  getFormDataPassword2,\n} from 'redux/validation/validationSelectors';\n\nexport const useValidation = () => {\n  const validationReqs = useSelector(getValidationReqs);\n  const formData = useSelector(getFormData);\n  const formDataEmail = useSelector(getFormDataEmail);\n  const formDataName = useSelector(getFormDataName);\n  const formDataPassword = useSelector(getFormDataPassword);\n  const formDataPassword2 = useSelector(getFormDataPassword2);\n\n  return {\n    validationReqs,\n    formData,\n    formDataEmail,\n    formDataName,\n    formDataPassword,\n    formDataPassword2,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"loginSection\":\"Login_loginSection__N7nMg\",\"loginForm\":\"Login_loginForm__fug3o\"};","import css from './Login.module.css';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  updateValidationReqs,\n  clearValidationReqs,\n} from 'redux/validation/validationSlice';\nimport { login } from 'redux/auth/authOperations';\nimport TextField from '@mui/material/TextField';\nimport { FormControl } from '@mui/material';\nimport InputLabel from '@mui/material/InputLabel';\nimport Input from '@mui/material/Input';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Button from '@mui/material/Button';\nimport LoginIcon from '@mui/icons-material/Login';\nimport ValidationPopup from 'components/ValidationPopup/ValidationPopup';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useValidation } from 'hooks/useValidation';\n\nconst Login = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const { email, password } = formData;\n  const [focusedField, setFocusedField] = useState('');\n  const dispatch = useDispatch();\n  const { validationReqs } = useValidation();\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    const targetField = e.target.id;\n    const value = e.target.value;\n    setFormData(prevState => ({ ...prevState, [targetField]: value }));\n    dispatch(updateValidationReqs({ [e.target.id]: e.target.value }));\n  };\n\n  const handleFocus = e => {\n    const targetField = e.target.id;\n    setFocusedField(targetField);\n  };\n\n  const handleBlur = () => {\n    setFocusedField('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!email || !password) {\n      Notify.warning('Please fill in all the fields');\n      return;\n    } else {\n      dispatch(login({ email, password })).then(() => {\n        navigate('/contacts');\n      });\n      dispatch(clearValidationReqs());\n    }\n  };\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <section className={css.loginSection}>\n      <form className={css.loginForm}>\n        <TextField\n          id=\"email\"\n          label=\"Email\"\n          autoComplete=\"off\"\n          variant=\"standard\"\n          fullWidth\n          size=\"large\"\n          value={email}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          sx={{ marginTop: '20px' }}\n        />\n        {focusedField === 'email' && (\n          <ValidationPopup validationData={validationReqs.email} />\n        )}\n        <FormControl\n          sx={{ width: '100%', marginTop: '20px' }}\n          variant=\"standard\"\n        >\n          <InputLabel htmlFor=\"standard-adornment-password\">\n            Password\n          </InputLabel>\n          <Input\n            id=\"password\"\n            type={showPassword ? 'text' : 'password'}\n            autoComplete=\"off\"\n            value={password}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        {focusedField === 'password' && (\n          <ValidationPopup validationData={validationReqs.password} />\n        )}\n        <Button\n          sx={{ marginTop: '40px' }}\n          variant=\"contained\"\n          fullWidth\n          startIcon={<LoginIcon />}\n          onClick={handleSubmit}\n        >\n          LOGIN\n        </Button>\n      </form>\n    </section>\n  );\n};\n\nexport default Login;\n"],"names":["validationData","Paper","elevation","className","css","List","sx","width","maxWidth","map","item","index","Object","keys","id","message","met","IconComponent","CheckCircleOutlineIcon","ErrorOutlineIcon","iconColor","ListItem","disableGutters","style","color","ListItemText","disableTypography","primary","fontSize","getValidationReqs","state","validation","validationReqs","getFormData","formData","getFormDataName","name","getFormDataPassword","password","getFormDataPassword2","password2","getFormDataEmail","email","useValidation","useSelector","formDataEmail","formDataName","formDataPassword","formDataPassword2","useState","showPassword","setShowPassword","setFormData","focusedField","setFocusedField","dispatch","useDispatch","navigate","useNavigate","handleChange","e","targetField","target","value","prevState","updateValidationReqs","handleFocus","handleBlur","TextField","label","autoComplete","variant","fullWidth","size","onFocus","onBlur","onChange","marginTop","ValidationPopup","FormControl","InputLabel","htmlFor","Input","type","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","preventDefault","VisibilityOff","Visibility","Button","startIcon","login","then","clearValidationReqs","Notify"],"sourceRoot":""}