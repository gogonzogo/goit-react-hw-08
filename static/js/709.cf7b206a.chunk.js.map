{"version":3,"file":"static/js/709.cf7b206a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ValidationPopup/ValidationPopup.module.css?7cae","components/ValidationPopup/ValidationPopup.jsx","webpack://react-homework-template/./src/pages/Login/Login.module.css?b420","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"validationPopup\":\"ValidationPopup_validationPopup__-i5Rs\",\"validationPopupItem\":\"ValidationPopup_validationPopupItem__H+yOa\",\"validationPopupIcon\":\"ValidationPopup_validationPopupIcon__THSxl\"};","import css from './ValidationPopup.module.css';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport { Paper } from '@mui/material';\n\nconst ValidationPopup = ({ validationData }) => {\n\n  return (\n    <Paper elevation={8} className={css.validationPopup}>\n      <List\n        className={css.validationPopupList}\n        sx={{ width: '100%', maxWidth: 360 }}\n      >\n        {validationData.map((item, index) => {\n          const reqKey = Object.keys(item)[0];\n          const { id, message, met } = item[reqKey];\n          const IconComponent = met ? CheckCircleOutlineIcon : ErrorOutlineIcon;\n          const iconColor = met ? 'green' : 'red';\n\n          return (\n            <ListItem\n              className={css.validationPopupItem}\n              key={id}\n              disableGutters\n            >\n              <IconComponent\n                className={css.validationPopupIcon}\n                style={{ color: iconColor }}\n              />\n              <ListItemText\n                disableTypography\n                primary={message}\n                sx={{ fontSize: '12px' }}\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Paper>\n  );\n};\n\nexport default ValidationPopup;\n","// extracted by mini-css-extract-plugin\nexport default {\"loginSection\":\"Login_loginSection__N7nMg\",\"loginForm\":\"Login_loginForm__fug3o\"};","import css from './Login.module.css';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  updateValidationReqs,\n  clearValidationReqs,\n} from 'redux/validation/validationSlice';\nimport { login } from 'redux/auth/authOperations';\nimport TextField from '@mui/material/TextField';\nimport { FormControl } from '@mui/material';\nimport InputLabel from '@mui/material/InputLabel';\nimport Input from '@mui/material/Input';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Button from '@mui/material/Button';\nimport LoginIcon from '@mui/icons-material/Login';\nimport ValidationPopup from 'components/ValidationPopup/ValidationPopup';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst Login = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const { email, password } = formData;\n  const [focusedField, setFocusedField] = useState('');\n  const dispatch = useDispatch();\n  const validationReqs = useSelector(state => state.validation.validationReqs);\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    const targetField = e.target.id;\n    const value = e.target.value;\n    setFormData(prevState => ({ ...prevState, [targetField]: value }));\n    dispatch(updateValidationReqs({ [e.target.id]: e.target.value }));\n  };\n\n  const handleFocus = e => {\n    const targetField = e.target.id;\n    setFocusedField(targetField);\n  };\n\n  const handleBlur = () => {\n    setFocusedField('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userEmail = Object.values(validationReqs.email);\n    const userPassword = Object.values(validationReqs.password);\n    const isEmailValid = userEmail.map(el =>\n      Object.values(el).every(el => el.met === true)\n    );\n    const isPasswordValid = userPassword.map(el =>\n      Object.values(el).every(el => el.met === true)\n    );\n\n    if (!email || !password) {\n      Notify.warning('Please fill in all the fields');\n      return;\n    } else if (!isEmailValid || !isPasswordValid) {\n      Notify.warning('Please correct the fields with errors');\n      return;\n    } else {\n      dispatch(login({ email, password })); \n      Notify.success('Success! Logging you in...');\n      setFormData({ email: '', password: '' });\n      dispatch(clearValidationReqs());\n      navigate('/contacts');\n    }\n  };\n\n  Notify.init({\n    position: 'center-center',\n    distance: '15px',\n    timeout: 1000,\n    showOnlyTheLastOne: true,\n    fontSize: '20px',\n  });\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <section className={css.loginSection}>\n      <form className={css.loginForm}>\n        <TextField\n          id=\"email\"\n          label=\"Email\"\n          variant=\"standard\"\n          fullWidth\n          size=\"large\"\n          value={email}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          sx={{ marginTop: '20px' }}\n        />\n        {focusedField === 'email' && (\n          <ValidationPopup validationData={validationReqs.email} />\n        )}\n        <FormControl\n          sx={{ width: '100%', marginTop: '20px' }}\n          variant=\"standard\"\n        >\n          <InputLabel htmlFor=\"standard-adornment-password\">\n            Password\n          </InputLabel>\n          <Input\n            id=\"password\"\n            type={showPassword ? 'text' : 'password'}\n            autoComplete=\"off\"\n            value={password}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        {focusedField === 'password' && (\n          <ValidationPopup validationData={validationReqs.password} />\n        )}\n        <Button\n          sx={{ marginTop: '40px' }}\n          variant=\"contained\"\n          fullWidth\n          startIcon={<LoginIcon />}\n          onClick={handleSubmit}\n        >\n          LOGIN\n        </Button>\n      </form>\n    </section>\n  );\n};\n\nexport default Login;\n"],"names":["validationData","Paper","elevation","className","css","List","sx","width","maxWidth","map","item","index","Object","keys","id","message","met","IconComponent","CheckCircleOutlineIcon","ErrorOutlineIcon","iconColor","ListItem","disableGutters","style","color","ListItemText","disableTypography","primary","fontSize","useState","showPassword","setShowPassword","email","password","formData","setFormData","focusedField","setFocusedField","dispatch","useDispatch","validationReqs","useSelector","state","validation","navigate","useNavigate","handleChange","e","targetField","target","value","prevState","updateValidationReqs","handleFocus","handleBlur","Notify","position","distance","timeout","showOnlyTheLastOne","TextField","label","variant","fullWidth","size","onFocus","onBlur","onChange","marginTop","ValidationPopup","FormControl","InputLabel","htmlFor","Input","type","autoComplete","endAdornment","InputAdornment","IconButton","onClick","show","onMouseDown","event","preventDefault","VisibilityOff","Visibility","Button","startIcon","userEmail","values","userPassword","isEmailValid","el","every","isPasswordValid","login","clearValidationReqs"],"sourceRoot":""}